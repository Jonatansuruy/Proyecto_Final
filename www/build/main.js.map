{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/providers/provider-persona/provider-persona.ts","../../src/providers/notification-server/notification-server.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 160;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 160\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 204;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 204\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { ProviderPersonaProvider } from '../../providers/provider-persona/provider-persona';\nimport { NotificationServerProvider } from '../../providers/notification-server/notification-server';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs';\nimport { jsonpCallbackContext } from '@angular/common/http/src/module';\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  public mySubject: BehaviorSubject<any>;\n  public mySubject2: BehaviorSubject<any>;\n\n  persona={\"id\":null,\"primerNombre\":\"\",\"segundoNombre\":\"\",\"edad\":''};\n  personas;\n  \n  constructor(public navCtrl: NavController, public PersonaService: ProviderPersonaProvider,\n   public notificationService: NotificationServerProvider,\n   public alertaController: AlertController\n  ) {\n    this.mySubject=new BehaviorSubject(null);\n    this.mySubject2=new BehaviorSubject(null);\n  }\n  ngOnInit(): void {\n\n    console.log('on init');\n\n    this.mySubject.subscribe((result)=> {\n      this.procesarSubject(result)\n    })\n    \n    // realizar suscripcion\n    this.doNotificationSubscription();\n\n    // ejecutar llamada de servicio restful al iniciar la aplicacion\n    this.PersonaService\n      .personaList(null)\n      .subscribe((result) => { this.personas = result\n      });\n      \n  }\n  ngOnDestroy(): void {\n    console.log('on destroy');\n  }\n   /* ------------------------------------------------------------------------------------------------- */\n   public doNotificationSubscription(): void {\n    try {\n      this.notificationService.getPersonaNotification().subscribe((result) => {\n        this.handleMessageReceived(result); \n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  /* ------------------------------------------------------------------------------------------------- */\n  private handleMessageReceived(message: any): void {\n    console.log('Mensaje recibido:' + JSON.stringify(message));\n    this.mySubject.next(JSON.parse(message));\n  }\n\n  /* ------------------------------------------------------------------------------------------------- */\n  public Edit(): void {\n\n    let datoEnviar ={\"id\":this.persona.id,\"primerNombre\":this.persona.primerNombre,\n    \"segundoNombre\":this.persona.segundoNombre,\"edad\":this.persona.edad};\n\n      if (this.personas[datoEnviar.id] === undefined ){\n        const alert = this.alertaController.create(\n          {\n          title: 'Error al Editar',\n          subTitle: 'El cogido ingresado no Existe',\n          buttons: ['OK']\n          });\n        alert.present();\n      }else{\n\n        console.log('Datos a enviar:' + JSON.stringify(datoEnviar));\n\n        this.PersonaService.update(datoEnviar).subscribe(result => {\n        console.log('Datos from server:' + JSON.stringify(result));\n        });\n      }\n  }\n   /* ------------------------------------------------------------------------------------------------- */\n   public Envio(): void {\n    let datoEnviar ={\"id\":this.personas.length,\"primerNombre\":this.persona.primerNombre,\n    \"segundoNombre\":this.persona.segundoNombre,\"edad\":this.persona.edad};\n    console.log(this.personas.length);\n      if (datoEnviar.primerNombre !== '' && datoEnviar.segundoNombre !== '' && datoEnviar.edad !== '' ){\n      \n        console.log('Datos a enviar:' + JSON.stringify(datoEnviar));\n        this.PersonaService.create(datoEnviar).subscribe(result => {\n        console.log('Datos from server:' + JSON.stringify(result));\n        });\n      }else {\n        const alert = this.alertaController.create(\n          {\n          title: 'Error al Guardar',\n          subTitle: 'Datos Incompletos',\n          buttons: ['OK']\n          });\n        alert.present();\n      }\n    }\n   /* ------------------------------------------------------------------------------------------------- */\n   public procesarSubject (result: any): void {\n    if (result == null) return;\n    this.personas[result.id]=result;\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\n/*\n  Generated class for the ProviderPersonaProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class ProviderPersonaProvider {\n   /* -------------------------------------------------------------------------------------------------------------- */\n   private serviceURL = 'http://192.168.0.195:8585/persona';\n\n   private httpHeaders = new HttpHeaders({\n     'Content-Type': 'application/json',\n     'Accept': 'application/json'\n   });\n \n   /* -------------------------------------------------------------------------------------------------------------- */\n \n  constructor(public httpClient: HttpClient) {\n    console.log('Hello ProviderPersonaProvider Provider');\n  }\n   \n   \n    /* -------------------------------------------------------------------------------------------------------------- */\n  \n    public personaList(params: any): Observable<any> {\n      let url: string = this.serviceURL + '/all';\n  \n      return this.httpClient\n        .get(url, {headers: this.httpHeaders, params: params});\n    }\n  \n    /* -------------------------------------------------------------------------------------------------------------- */\n  \n    /**\n     * Servicio de envio de POST\n     * @param model\n     */\n    public create(model: any): Observable<any> {\n      let url: string = this.serviceURL + \"/create\";\n      let headers: any = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      return this.httpClient\n        .post(url, JSON.stringify(model), {headers: headers});\n    }\n  /**\n     * Servicio de envio de PUT\n     * @param model\n     */\n    public update(model: any): Observable<any> {\n      let url: string = this.serviceURL + \"/update\";\n      let headers: any = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      return this.httpClient\n        .put(url, JSON.stringify(model), {headers: headers});\n    }\n  \n    /* -------------------------------------------------------------------------------------------------------------- */\n  }\n  \n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/provider-persona/provider-persona.ts","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport {EventSourcePolyfill} from 'event-source-polyfill';\n\n/*\n  Generated class for the NotificationServerProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class NotificationServerProvider {\n\n /* -------------------------------------------------------------------------------------------------------------- */\n private serviceURL = 'http://localhost:8585/persona';\n\n private httpHeaders = new HttpHeaders({\n   'Content-Type': 'application/json',\n   'Accept': 'application/json'\n });\n\n /* -------------------------------------------------------------------------------------------------------------- */\n\n constructor(private httpClient: HttpClient) {\n }\n\n /* -------------------------------------------------------------------------------------------------------------- */\n\n /**\n  * Servicio que permite la conexion hacia el servicio reactivo, dicha funcion retorna\n  */\n public getPersonaNotification(): Observable<any> {\n\n   // creando un observable ... que este conectado mediante un \"EventSource\"\n   return Observable.create((observer) => {\n\n     const url: any = this.serviceURL + '/notification/sse';\n\n     // definiendo conexion de event source ... asi como los eventos que estara escuchando\n     var eventSource = new EventSourcePolyfill(url,\n       {\n         heartbeatTimeout: 30000,\n         connectionTimeout: 60000\n       }\n     );\n     // verificar los \"event\" definidos para los flujos en el server\n     eventSource.addEventListener('persona-result', function (event: any) {\n       observer.next(event.data);\n     });\n\n     // verificar los \"event\" definidos para los flujos en el server\n     eventSource.addEventListener('heartbeat-result', function (event) {\n       console.log('eventSource.addEventListener: on heartbeat....');\n     });\n\n     return () => eventSource.close();\n   });\n }\n\n /* -------------------------------------------------------------------------------------------------------------- */\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/notification-server/notification-server.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { ProviderPersonaProvider } from '../providers/provider-persona/provider-persona';\nimport { NotificationServerProvider } from '../providers/notification-server/notification-server';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  bootstrap: [IonicApp],  \n  entryComponents: [\n    MyApp,\n    HomePage,\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    ProviderPersonaProvider,\n    NotificationServerProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}